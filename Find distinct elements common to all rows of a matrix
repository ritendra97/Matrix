//Find distinct elements common to all rows of a matrix
import java.util.*;
public class Matrix 
{
	static void sortRows(int mat[][],int n)
	{
		for(int i=0;i<n;i++)
		{
			Arrays.parallelSort(mat[i]);
		}
	}
	static void findAndPrintCommonElements(int mat[][],int n)
	{
		sortRows(mat,n);
		int[] curr_index = new int[n]; 
		  
	    int f = 0;
	    for (; curr_index[0] < n; curr_index[0]++) 
	    { 
	    	int value = mat[0][curr_index[0]]; 
	    	boolean present = true;
	    	for(int i =1;i<n;i++)
	    	{
	    		while(curr_index[i]<n && mat[i][curr_index[i]]<=value)
	    		{
	    			curr_index[i]++;
	    		}
	    		if(mat[i][curr_index[i]-1]!=value)
	    			present=false;
	    		if(curr_index[i]==n)
	    		{
	    			f=1;
	    			break;
	    		}
	    	}
	    	if(present)
	    		System.out.println(value+" ");
	    	if(f==1)
	    		break;
	    }
	}
	static void printMat(int mat1[][], int n) 
    { 
		for(int i=0;i<n;i++)
		{
			for(int j=0;j<n;j++)
			{
				System.out.print(mat1[i][j]+" ");
			}
			System.out.println();
		}
    }
	public static void main(String[] args) 
	{
		 int mat[][]  =   {{12, 1, 14, 3, 16}, 
                          {14, 2, 1, 3, 35}, 
                          {14, 1, 14, 3, 11}, 
                          {14, 25, 3, 2, 1}, 
                          {1, 18, 3, 21, 14}}; 
         int n = 5; 
         findAndPrintCommonElements(mat, n);
	}
}
//Below solution is optimized solution
