//Find the Specific Pair in Matrix
import java.util.*;
public class Matrix {

	static int findMaxValue(int N,int mat[][]){
		
		int max_value = Integer.MIN_VALUE;
		for(int i=0;i<N-1;i++) {
			
			for(int j=0;j<N-1;j++) {
				
				for(int k =i+1;k<N;k++) {
					
					for(int l=j+1;l<N;l++) {
						
						if(max_value<mat[k][l]-mat[i][j])
							max_value=mat[k][l]-mat[i][j];
					}
				}
			}
		}
		return max_value;
    }
	public static void main(String[] args) {
		
		 int N = 5;
		 
	        int mat[][] = {
	                      { 1, 2, -1, -4, -20 },
	                      { -8, -3, 4, 2, 1 },
	                      { 3, 8, 6, 1, 3 },
	                      { -4, -1, 1, 7, -6 },
	                      { 0, -4, 10, -5, 1 }
	                   };
	 
	        System.out.print("Maximum Value is " +
	                         findMaxValue(N,mat));
	}

}
// this is optimized version O(n2)

import java.util.*;
public class Matrix {

	static int findMaxValue(int N,int mat[][]){
		
		int maxval = Integer.MIN_VALUE;
		int maxmat[][] = new int[N][N];
		
		maxval = mat[N-1][N-1];
		maxmat[N-1][N-1] = mat[N-1][N-1];
		
		for(int j=N-2;j>=0;j--) {
			
			if(maxval<mat[N-1][j])
				maxval = mat[N-1][j];
			maxmat[N-1][j]=maxval;
		}
		
		maxval = mat[N-1][N-1];
		
        for(int i=N-2;i>=0;i--) {
			
        	if(maxval<mat[i][N-1])
				maxval = mat[i][N-1];
			maxmat[i][N-1]=maxval;
		}
        
        for(int i=N-2;i>=0;i--) {
        	
        	for(int j=N-2;j>=0;j--) {
        		
        		if(maxval<maxmat[i+1][j+1]-mat[i][j])
        			maxval = maxmat[i+1][j+1]-mat[i][j];
        		
        		maxmat[i][j] = Math.max(mat[i][j], Math.max(maxmat[i][j+1], maxmat[i+1][j]));
        	}
        }
        return maxval;
    }
	public static void main(String[] args) {
		
		 int N = 5;
		 
	        int mat[][] = {{ 1, 2, -1, -4, -20 },
	                       { -8, -3, 4, 2, 1 },
	                       { 3, 8, 6, 1, 3 },
	                       { -4, -1, 1, 7, -6 },
	                       { 0, -4, 10, -5, 1 }};
	 
	        System.out.print("Maximum Value is " +
	                         findMaxValue(N,mat));
	}

}
