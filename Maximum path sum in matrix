//Maximum path sum in matrix
import java.util.*;
class coordinate
{
	int x;
	int y;
	coordinate(int x,int y)
	{
		this.x=x;
		this.y=y;
	}
}
public class Matrix 
{
	static int N=2;
	static boolean issafe(int i,int j)
	{
		if(i>=0 && i<N && j>=0 && j<N )
			return true;
		return false;
	}
	static int maximumPath(int N,int M, int Matrix[][])
    {
		int result=-1;
		for(int i=0;i<M;i++)
		{
			result=Math.max(result, Matrix[0][i]);
		}
		for(int i=1;i<N;i++)
		{
			for(int j=0;j<M;j++)
			{
				if(j>0 && j<M-1)
				{
					Matrix[i][j]+=Math.max(Math.max(Matrix[i-1][j],Matrix[i-1][j-1]),Matrix[i-1][j+1]);
				}
				else if(j>0)
				{
					Matrix[i][j]+=Math.max(Matrix[i-1][j], Matrix[i-1][j-1]);
				}
				else if(j<M-1)
				{
					Matrix[i][j]+=Math.max(Matrix[i-1][j], Matrix[i-1][j+1]);
				}
				result=Math.max(result, Matrix[i][j]);
			}
		}
		return result;
    }
	public static void main(String[] args) 
	{
		int Matrix[][] = { { 10, 10, 2, 0, 20, 4 }, 
                { 1, 0, 0, 30, 2, 5 }, 
                { 0, 10, 4, 0, 2, 0 }, 
                { 1, 0, 2, 20, 0, 4 } };
		System.out.println(maximumPath(4,6,Matrix));
	}
}
